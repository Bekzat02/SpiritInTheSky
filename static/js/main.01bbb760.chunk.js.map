{"version":3,"sources":["components/Users/users.module.css","assets/images/user.png","assets/images/preloader.svg","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Navbar/Navbar.module.css","components/Dialogs/Dialogs.module.css","serviceWorker.js","components/Navbar/Navbar.jsx","redux/dialog-reducer.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","utils/validators/validators.js","components/common/FormsControls/FormControls.js","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx","components/Users/User.jsx","components/common/Paginator/Paginator.jsx","components/Users/Users.jsx","api/api.js","utils/object-helpers.js","redux/users-reducer.js","components/common/Preloader/Preloader.js","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Profile/ProfileInfo/ProfileStatusHook.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","redux/profile-reducer.js","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","App.js","redux/sidebar-reducer.js","redux/redux-store.js","index.js","components/common/FormsControls/FormsControls.module.css","components/Header/Header.module.css","components/common/Paginator/Paginator.module.css","components/Profile/MyPosts/MyPosts.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","Navbar","className","s","nav","item","to","activeClassName","active","initialState","dialogs","id","name","messages","message","defaultMessage","dialogReducer","state","action","type","copyState","push","DialogItem","props","dialog","Message","required","value","maxLengthCreator","maxLength","length","FormControl","meta","hasError","touched","error","styles","formControl","children","Textarea","input","restProps","Input","createField","placeholder","validators","component","text","Field","validate","maxLength50","reduxForm","form","onSubmit","handleSubmit","Dialogs","dialogPage","dialogsPage","dialogsElements","map","messagesElements","m","dialogsItems","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","isAuth","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React","User","user","followingInProgress","unfollow","follow","src","photos","small","userPhoto","followed","disabled","some","onClick","status","Paginator","totalUsersCount","pageSize","currentPage","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","portionCount","useState","portionIndex","setPortionIndex","leftPortionPageNumber","rightPortionPageNumber","paginator","filter","p","cn","selectedPage","pageNumber","key","e","Users","users","u","instance","axios","create","withCredentials","baseURL","headers","usersAPI","getUsers","get","then","r","data","userId","post","delete","authAPI","email","password","rememberMe","profileAPI","put","updateObjectInArray","items","itemId","objPropName","newObjProps","isFetching","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","apiMethod","actionCreator","a","resultCode","usersReducer","count","Preloader","style","backgroundColor","preloader","getUsersSelec","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","requestUsers","bind","totalCount","ProfileStatus","editMode","setEditMode","setStatus","useEffect","onDoubleClick","onChange","currentTarget","autoFocus","onBlur","updateStatus","ProfileInfo","profile","descriptionBlock","large","ProfileStatusHook","posts","likesCount","profileReducer","newPost","newPostText","Post","img","likecount","maxLength10","AddNewPostFormRedux","MyPosts","memo","postsBlock","addPost","MyPostsContainer","profilePage","defaultText","addPostActionCreator","Profile","ProfileContainer","params","history","getUserProfile","getStatus","response","withRouter","Header","header","loginBlock","login","logout","setUserData","payload","getUserData","authReducer","HeaderContainer","LoginReduxForm","formSummaryError","stopSubmit","_error","loginForm","initialized","appReducer","App","initializeApp","path","render","DialogsContainer","app","promise","Promise","all","sidebarReducer","reducers","combineReducers","sidebar","formReducer","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.01bbb760.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__2K43N\",\"selectedPage\":\"users_selectedPage__33yB3\"};","module.exports = __webpack_public_path__ + \"static/media/user.8b1dbb1f.png\";","module.exports = __webpack_public_path__ + \"static/media/preloader.6e7c9db7.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2xjUu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"Post_posts__3ruuJ\",\"item\":\"Post_item__oPCH9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3yIYF\",\"item\":\"Navbar_item__Uouiq\",\"active\":\"Navbar_active__3DBz4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3q7Vz\",\"dialogsItems\":\"Dialogs_dialogsItems__3IdjJ\",\"active\":\"Dialogs_active__A4az1\",\"messages\":\"Dialogs_messages__2o8y0\",\"message\":\"Dialogs_message__17JAz\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n            <nav className={s.nav}>\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/profile\" activeClassName={s.active}>Profile</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/dialogs\" activeClassName={s.active}>Messages</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/users\" activeClassName={s.active}>Users</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <a>News</a>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <a>Music</a>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <a>Settings</a>\r\n                </div>\r\n            </nav>\r\n    );\r\n};\r\n\r\nexport default Navbar;","const UPDATE_NEW_MESSAGE_BODY = 'UPDATE_NEW_MESSAGE_BODY';\r\nconst SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState= {\r\n    dialogs: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrew'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Sasha'},\r\n        {id: 5, name: 'Viktor'},\r\n        {id: 6, name: 'Valera'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'What\\'s up'},\r\n        {id: 3, message: 'I\\'m good'},\r\n        {id: 4, message: 'I\\'m good'}\r\n    ],\r\n    defaultMessage: ''\r\n};\r\n\r\nconst dialogReducer = (state=initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE: {\r\n            const copyState={...state};\r\n            copyState.messages=[...state.messages];\r\n            copyState.defaultMessage = '';\r\n            copyState.messages.push({\r\n                id: 8,\r\n                message: action.message\r\n            });\r\n            return copyState;\r\n        }\r\n\r\n        /*case UPDATE_NEW_MESSAGE_BODY: {\r\n            const copyState={...state};\r\n            copyState.defaultMessage = action.newMessage;\r\n            return copyState;\r\n        }*/\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\nexport let sendMessageCreator = (message) => {\r\n    return {\r\n        type: SEND_MESSAGE,\r\n        message\r\n    }\r\n}\r\n\r\n\r\n/*export let updateNewMessageActionCreator = (message) => {\r\n    return {\r\n        type: UPDATE_NEW_MESSAGE_BODY,\r\n        newMessage: message\r\n    }\r\n}*/\r\nexport default dialogReducer;","import React from \"react\";\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={'/dialogs/' + props.id}> {props.name}</NavLink>\r\n    </div>\r\n};\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.dialog}>{props.message}</div>\r\n\r\n};\r\nexport default Message;","export const required = (value) => {\r\n    if (value) return undefined;\r\n\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","import React from 'react';\r\nimport styles from \"./FormsControls.module.css\";\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({meta,...props}) => {\r\n    const hasError=meta.touched && meta.error\r\n\r\n    return (\r\n        <div className={styles.formControl+\" \"+ (hasError ? styles.error : \"\") }>\r\n           <div>\r\n               {props.children}\r\n           </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const Textarea = (props) => {\r\n    const {input,...restProps}=props;\r\n    return <FormControl {...props}> <textarea {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input,meta,...restProps}=props;\r\n    return <FormControl {...props}> <input {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name}\r\n               validate={validators}\r\n               component={component}\r\n               {...props}\r\n        /> {text}\r\n    </div>\r\n)\r\n\r\n","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormControls\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       validate={[required, maxLength50]}\r\n                       placeholder='Enter your message' name=\"newMessageBody\" />\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: 'dialog-add-message-form'})(AddMessageForm);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogPage=props.dialogsPage;\r\n\r\n    let dialogsElements = dialogPage.dialogs.map(dialog => <DialogItem name={dialog.name} id={dialog.id}/>);\r\n    let messagesElements = dialogPage.messages.map(m => <Message message={m.message}/>);\r\n\r\n\r\n    let onSendMessageClick = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n   /* let UpdateMessage = (e) => {\r\n        let message =e.target.value;\r\n        props.updateNewMessageBody(message);\r\n    }*/\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n\r\n            <div className={s.messages}>\r\n                {messagesElements}\r\n                <br/>\r\n                <AddMessageForm onSubmit={onSendMessageClick}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Dialogs;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component{\r\n        render(){\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n};\r\n\r\n","import React from \"react\";\r\nimport s from './Dialogs.module.css';\r\nimport {\r\n    sendMessageCreator,\r\n} from \"../../redux/dialog-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n/*const DialogsContaine = (props) => {\r\n    let state = props.store.getState().dialogsPage;\r\n\r\n    let AddMessage = () => {\r\n        props.store.dispatch(sendMessageCreator());\r\n    }\r\n    let UpdateMessage = (e) => {\r\n        let message=updateNewMessageActionCreator(e);\r\n        props.store.dispatch(message);\r\n    }\r\n    return (\r\n        <Dialogs addMessageActionCreator={AddMessage}\r\n                 updateNewMessageActionCreator={UpdateMessage}\r\n                 dialogsPage={state}\r\n                 defaultMessage={state.defaultMessage}\r\n        />\r\n    );\r\n};*/\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n        defaultMessage: state.dialogsPage.defaultMessage,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (message) => {\r\n            dispatch(sendMessageCreator(message));\r\n        }\r\n    }\r\n}\r\n\r\n/*\r\nlet AuthRedirectComponent = withAuthRedirect(Dialogs)\r\n*/\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect)\r\n(Dialogs);\r\n\r\n","import React from 'react';\r\nimport styles from \"./users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet User = ({user, followingInProgress, unfollow, follow}) => {\r\n    return (\r\n       <div>\r\n                <span>\r\n                    <div>\r\n                       <NavLink to={'/profile/' + user.id}>\r\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                             className={styles.userPhoto}/>\r\n                       </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {user.followed\r\n                            ? <button disabled={followingInProgress\r\n                                .some(id => id === user.id)}\r\n                                      onClick={() => { unfollow(user.id) }}>\r\n                                Unfollow</button>\r\n                            : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                      onClick={() => { follow(user.id) }}>\r\n                                      Follow</button>}\r\n\r\n                    </div>\r\n                </span>\r\n                <span>\r\n                    <span>\r\n                        <div>{user.name}</div>\r\n                        <div>{user.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{\"user.location.country\"}</div>\r\n                        <div>{\"user.location.city\"}</div>\r\n                    </span>\r\n                </span>\r\n            </div>)\r\n}\r\n\r\nexport default User;","import React, {useState} from 'react';\r\nimport styles from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\n\r\n\r\nlet Paginator = ({totalUsersCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalUsersCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount/portionSize);\r\n    let [portionIndex, setPortionIndex] = useState(1);\r\n    let leftPortionPageNumber= (portionIndex-1) * portionSize+1;\r\n    let rightPortionPageNumber = portionIndex * portionSize\r\n    return (\r\n        <div className={styles.paginator}>\r\n            {portionIndex > 1 &&\r\n                <button onClick={() => {setPortionIndex(portionIndex-1)}}>PREV</button>\r\n            }\r\n            {pages.filter(p=> p >= leftPortionPageNumber && p<=rightPortionPageNumber).map((p) => {\r\n                return <span className={ cn({\r\n                    [styles.selectedPage]: currentPage === p\r\n                }, styles.pageNumber)}\r\n                            key={p}\r\n                            onClick={(e) => {\r\n                                onPageChanged(p)\r\n                            }}\r\n                            >{p}</span>\r\n            })}\r\n            {portionCount > portionIndex &&\r\n                <button onClick={() => {setPortionIndex(portionIndex+1)}}>NEXT</button>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport User from \"./User\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\n\r\n\r\nlet Users = (props) => {\r\n\r\n    return (\r\n        <div>\r\n\r\n            {\r\n                props.users.map(u => <User user={u}\r\n                                           followingInProgress={props.followingInProgress}\r\n                                           key={u.id}\r\n                                           unfollow={props.unfollow}\r\n                                           follow={props.follow}\r\n                />\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Users;","import axios from \"axios\";\r\n\r\nlet instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    headers: {\r\n        \"API-KEY\": \"6fd89697-288c-4fc6-8169-f6886a11cd31\"\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(r => {\r\n                return r.data;\r\n            });\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login(email,password,rememberMe=false){\r\n        return instance.post(`auth/login`,{email,password,rememberMe});\r\n    },\r\n    logout(){\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status: status});\r\n    }\r\n}","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map( u => {\r\n        if (u[objPropName] === itemId){\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 20,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setUsersTotalCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\nexport const requestUsers = (currentPage, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(currentPage));\r\n        let data = await usersAPI.getUsers(currentPage, pageSize)\r\n                dispatch(toggleIsFetching(false));\r\n                dispatch(setUsers(data.items));\r\n                dispatch (setUsersTotalCount(data.totalCount));\r\n    }\r\n}\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess)\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId,apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true,userId))\r\n    let r = await apiMethod(userId);\r\n    if (r.data.resultCode == 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleFollowingProgress(false,userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI),followSuccess)\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import React from \"react\";\r\nimport preloader from \"../../../assets/images/preloader.svg\";\r\n\r\nlet Preloader = () => {\r\n    return <div style={{backgroundColor: 'white'}}>\r\n        <img src={preloader}/>\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","import {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsersSelec=createSelector(getUsersSelector, (users) => {\r\n    return users.filter(u => true);\r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}\r\n\r\nexport const countSomethingDifficult = (state) => {\r\n    debugger\r\n    //for... math... big arrays\r\n    let count = 23;\r\n    return count;\r\n}\r\nexport const isAuth = (state) => {\r\n    return state.auth.isAuth;\r\n}","import {connect} from \"react-redux\";\r\nimport Users from \"./Users\";\r\nimport {\r\n    follow, requestUsers, setCurrentPage,\r\n    unfollow,\r\n} from \"../../redux/users-reducer\";\r\nimport React from \"react\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsersSelec\r\n} from \"../../redux/users-selectors\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.requestUsers(currentPage,pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props;\r\n        this.props.requestUsers(pageNumber,pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            <Paginator currentPage={this.props.currentPage}\r\n                       onPageChanged={this.onPageChanged}\r\n                       totalUsersCount={this.props.totalUsersCount}\r\n                       pageSize={this.props.pageSize}\r\n            />\r\n            {this.props.isFetching ? <Preloader/> : <Users totalUsersCount={this.props.totalUsersCount}\r\n                                                           pageSize={this.props.pageSize}\r\n                                                           currentPage={this.props.currentPage}\r\n                                                           onPageChanged={this.onPageChanged}\r\n                                                           users={this.props.users}\r\n                                                           follow={this.props.follow}\r\n                                                           unfollow={this.props.unfollow}\r\n                                                           followingInProgress={this.props.followingInProgress} />}\r\n        </>\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users:getUsersSelec(state) ,\r\n        currentPage: getCurrentPage(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n    }\r\n}\r\n\r\n/*\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        follow: (userId) => {\r\n            dispatch(followAC(userId));\r\n        },\r\n        unfollow: (userId) => {\r\n            dispatch(unfollowAC(userId));\r\n        },\r\n        setUsers: (users) => {\r\n            dispatch(setUsersAC(users));\r\n        },\r\n        setCurrentPage: (pageNumber) => {\r\n            dispatch(setCurrentPageAC(pageNumber))\r\n        },\r\n        setTotalUsersCount: (totalCount) => {\r\n            dispatch(setUsersTotalCountAC(totalCount))\r\n        }\r\n    }\r\n}\r\n*/\r\n\r\n\r\n/*\r\nlet AuthRedirectComponent = withAuthRedirect(UsersContainer)\r\n*/\r\n\r\n\r\nexport default compose (\r\n    connect(mapStateToProps,\r\n        { follow, unfollow,setCurrentPage, requestUsers}),\r\n    )\r\n(UsersContainer)","import React, {useEffect, useState} from 'react';\r\n\r\nconst ProfileStatus = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            {!editMode &&\r\n\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || \"Slim Shady\"}</span>\r\n            </div>\r\n\r\n            }\r\n            {editMode &&\r\n\r\n            <div>\r\n                <input onChange={onStatusChange}\r\n                       autoFocus={true}\r\n                       onBlur={deactivateEditMode}\r\n                       value={status}/>\r\n            </div>\r\n\r\n            }\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default ProfileStatus;","import React from \"react\";\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusHook from \"./ProfileStatusHook\";\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    if(!props.profile){\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={props.profile.photos.large}/>\r\n                <ProfileStatusHook status={props.status}\r\n                               updateStatus={props.updateStatus}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileInfo;","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\n\r\n/*\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\n*/\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi', likesCount: 12},\r\n        {id: 2, message: 'What\\'s up', likesCount: 26}\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 8,\r\n                message: action.newPostText,\r\n                likesCount: 0,\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            }\r\n        }\r\n        /*case UPDATE_NEW_POST_TEXT: {\r\n            return {\r\n                ...state,\r\n                defaultText: action.newText\r\n            }\r\n        }*/\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case SET_STATUS: {\r\n            return {...state, status: action.status}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport let addPostActionCreator = (newPostText) => ({type: ADD_POST,newPostText})\r\n/*\r\nexport let updateNewPostTextActionCreator = (text) => ({type: UPDATE_NEW_POST_TEXT, newText: text})\r\n*/\r\nexport let setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport let setStatus = (status) => ({type: SET_STATUS, status})\r\n\r\nexport let getUserProfile = (userId) => (dispatch) => {\r\n    profileAPI.getProfile(userId)\r\n        .then(response => {\r\n            dispatch(setUserProfile(response.data));\r\n        });\r\n}\r\n\r\nexport let getStatus = (userId) => async(dispatch) => {\r\n    let response = await profileAPI.getStatus(userId)\r\n            dispatch(setStatus(response.data));\r\n}\r\nexport let updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status)\r\n            if(response.data.resultCode===0) {\r\n                dispatch(setStatus(status));\r\n            }\r\n}\r\n\r\nexport default profileReducer;","import React from \"react\";\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src={props.img}/>\r\n            {props.message}\r\n            <div>\r\n                <span>likes</span> {props.likecount}\r\n            </div>\r\n            <br/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Post;","import React from \"react\";\r\nimport s from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Field,reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormControls\";\r\n\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\n\r\nlet AddNewPostForm = (props) =>{\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field component={Textarea} name={\"newPostText\"} validate={[required,maxLength10]}/>\r\n        </div>\r\n        <div>\r\n            <button>\r\n                Add post\r\n            </button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nlet AddNewPostFormRedux= reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm)\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    let post = props.posts.map(m => <Post message={m.message} likecount={m.likesCount} img='https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRZ0-g8vswsaeEKDYEYiBWtgYBXH0Zhy06CAw&usqp=CAU'/>);\r\n\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    /*\r\n    let newPostElement = React.createRef();\r\n    */\r\n\r\n/*\r\n    let updateText = () => {\r\n        let text = newPostElement.current.value;\r\n        props.updateNewPostText(text);\r\n    }*/\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {post}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n);\r\n\r\n\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n/*const MyPostsContainer = (props) => {\r\n    let state = props.store.getState().profilePage;\r\n    let addPost = () => {\r\n        props.store.dispatch(addPostActionCreator());\r\n    }\r\n\r\n    let updateText = (text) => {\r\n        let action = updateNewPostTextActionCreator(text);\r\n        props.store.dispatch(action);\r\n    }\r\n\r\n    return (\r\n        <MyPosts postAdd={addPost}\r\n                 updateNewPostText={updateText}\r\n                 posts={state.posts}\r\n                 defaultText={state.defaultText}\r\n        />\r\n    );\r\n};*/\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        defaultText: state.profilePage.defaultText\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile}\r\n                         status={props.status}\r\n                         updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Profile from \"./Profile\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport { withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.userId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                profile={this.props.profile}\r\n                status={this.props.status}\r\n                updateStatus={this.props.updateStatus}/>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    userId: state.auth.id,\r\n});\r\n\r\n/*\r\nlet AuthRedirectComponent = withAuthRedirect(ProfileContainer)\r\n*/\r\n\r\n/*\r\nlet WithUrlDataContainerComponent=withRouter(AuthRedirectComponent)\r\n*/\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile,getStatus,updateStatus}),\r\n    withRouter,\r\n   )\r\n(ProfileContainer);","import React from \"react\";\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img src='https://angular.io/assets/images/logos/angular/angular_solidBlack.png'/>\r\n            <div className={s.loginBlock}>\r\n                {props.isAuth ? <div>{props.login}  <button onClick={props.logout}>Log out</button> </div>\r\n                    : <NavLink to={'/login'}>Login</NavLink> }\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const setUserData = (id, email, login, isAuth) => ({type: SET_USER_DATA, payload: {id, email, login, isAuth}})\r\n\r\nexport const getUserData = () => async (dispatch) => {\r\n    let r = await authAPI.me()\r\n            if (r.data.resultCode === 0) {\r\n                let {id, email, login} = r.data.data;\r\n                dispatch(setUserData(id, email, login, true));\r\n            }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getUserData())\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout()\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport default authReducer;","import React from \"react\";\r\nimport s from './Header.module.css';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return (\r\n            <Header {...this.props} />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../common/FormsControls/FormControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from \"./../common/FormsControls/FormsControls.module.css\"\r\n\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            {createField(\"Email\",\"email\",[required],Input)}\r\n            {createField(\"Password\",\"password\",[required],Input,{type:\"password\"})}\r\n            {createField(null,\"rememberMe\",[],Input,{type: \"checkbox\"},\"remember me\")}\r\n\r\n            {props.error &&\r\n            <div className={style.formSummaryError}>\r\n                {props.error}\r\n            </div>\r\n            }\r\n\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({form: \"login\"})(LoginForm)\r\n\r\n\r\nconst Login = (props) => {\r\n\r\n    const onSubmit = (loginForm) => {\r\n        props.login(loginForm.email, loginForm.password, loginForm.rememberMe);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import {getUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS})\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise=dispatch(getUserData());\r\n    Promise.all([promise])\r\n        .then(()=>{\r\n            dispatch(initializedSuccess());\r\n        });\r\n}\r\n\r\n\r\nexport default appReducer;","import React from 'react';\nimport './App.css';\nimport Navbar from \"./components/Navbar/Navbar\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport {withRouter,Route} from \"react-router-dom\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\nimport {connect} from \"react-redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport {compose} from \"redux\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n        return (\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className='app-wrapper-content'>\n                    <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\n                    <Route path='/dialogs' render={() => <DialogsContainer/>}/>\n                    <Route path='/users' render={() => <UsersContainer/>}/>\n                    <Route path='/login' render={() => <Login/>}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\nexport default compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App);","let initialState={}\r\n\r\nconst sidebarReducer=(state=initialState, action)=>{\r\n\r\n\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogReducer from \"./dialog-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app:appReducer\r\n})\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from \"./redux/redux-store\";\nimport {Provider} from \"react-redux\";\nimport {BrowserRouter, HashRouter} from \"react-router-dom\";\n\n    ReactDOM.render(\n        <BrowserRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n        </BrowserRouter>,document.getElementById('root')\n    )\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1OWJt\",\"error\":\"FormsControls_error__Lo1ky\",\"formSummaryError\":\"FormsControls_formSummaryError__3040z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3k67y\",\"loginBlock\":\"Header_loginBlock__1MYz2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__3hwQG\",\"paginator\":\"Paginator_paginator__1tIDa\",\"pageNumber\":\"Paginator_pageNumber__1-xBa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__15atM\",\"posts\":\"MyPosts_posts__29U14\"};"],"sourceRoot":""}